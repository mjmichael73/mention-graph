services:

  db:
    image: postgres:15
    container_name: mentions-graph-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mention_graph_db
    ports:
      - "5432:5432"
    volumes:
      - mentions-graph-db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - mentions-graph-net

  redis-master:
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes", "--protected-mode", "no"]
    networks:
      - mentions-graph-net

  redis-slave-1:
    image: redis:latest
    depends_on:
      - redis-master
    command: ["redis-server", "--replicaof", "redis-master", "6379", "--protected-mode", "no"]
    networks:
      - mentions-graph-net

  redis-slave-2:
    image: redis:latest
    depends_on:
      - redis-master
    command: ["redis-server", "--replicaof", "redis-master", "6379", "--protected-mode", "no"]
    networks:
      - mentions-graph-net

  redis-slave-3:
    image: redis:latest
    depends_on:
      - redis-master
    command: ["redis-server", "--replicaof", "redis-master", "6379", "--protected-mode", "no"]
    networks:
      - mentions-graph-net

  sentinel-1:
    image: redis:latest
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2
      - redis-slave-3
    command: >
      sh -c 'echo "sentinel resolve-hostnames yes" > /etc/sentinel.conf &&
            echo "sentinel monitor mymaster redis-master 6379 2" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds mymaster 1000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout mymaster 5000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs mymaster 1" >> /etc/sentinel.conf &&
            redis-server /etc/sentinel.conf --sentinel'
    networks:
      - mentions-graph-net

  sentinel-2:
    image: redis:latest
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2
      - redis-slave-3
    command: >
      sh -c 'echo "sentinel resolve-hostnames yes" > /etc/sentinel.conf &&
            echo "sentinel monitor mymaster redis-master 6379 2" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds mymaster 1000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout mymaster 5000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs mymaster 1" >> /etc/sentinel.conf &&
            redis-server /etc/sentinel.conf --sentinel'
    networks:
      - mentions-graph-net

  sentinel-3:
    image: redis:latest
    depends_on:
      - redis-master
      - redis-slave-1
      - redis-slave-2
      - redis-slave-3
    command: >
      sh -c 'echo "sentinel resolve-hostnames yes" > /etc/sentinel.conf &&
            echo "sentinel monitor mymaster redis-master 6379 2" >> /etc/sentinel.conf &&
            echo "sentinel down-after-milliseconds mymaster 1000" >> /etc/sentinel.conf &&
            echo "sentinel failover-timeout mymaster 5000" >> /etc/sentinel.conf &&
            echo "sentinel parallel-syncs mymaster 1" >> /etc/sentinel.conf &&
            redis-server /etc/sentinel.conf --sentinel'
    networks:
      - mentions-graph-net
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: mentions-graph-app
    env_file: "./backend/.env"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis-master
      - redis-slave-1
      - redis-slave-2
      - redis-slave-3
      - sentinel-1
      - sentinel-2
      - sentinel-3
    networks:
      - mentions-graph-net

  celery:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: "./backend/.env"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis-master
      - redis-slave-1
      - redis-slave-2
      - redis-slave-3
      - sentinel-1
      - sentinel-2
      - sentinel-3
    command: celery -A app.celery_app worker --loglevel=info --queues mentions --concurrency=1
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1'
          memory: 1024M
    networks:
      - mentions-graph-net

  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    env_file: "./backend/.env"
    volumes:
      - ./backend:/app
    depends_on:
      - db
      - redis-master
      - redis-slave-1
      - redis-slave-2
      - redis-slave-3
      - sentinel-1
      - sentinel-2
      - sentinel-3
    command: celery -A app.celery_app beat --loglevel=info
    networks:
      - mentions-graph-net

  nginx:
    image: nginx:alpine
    container_name: mentions-graph-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      - mentions-graph-net

volumes:
  mentions-graph-db-data:


networks:
  mentions-graph-net:
    driver: bridge
